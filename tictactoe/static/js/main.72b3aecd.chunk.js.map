{"version":3,"sources":["Components/Icon.jsx","App.js","index.js"],"names":["Icon","icon_name","className","itemArray","Array","fill","App","useState","isCross","setIsCross","winMsg","setWinMsg","changeItem","item_number","toast","type","Container","position","Row","Col","md","Button","style","width","color","onClick","map","item","index","Card","CardBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGe,SAASA,EAAT,GACb,OAD0C,EAAbC,WAE3B,IAAK,SACH,OAAO,cAAC,IAAD,CAAaC,UAAU,SAChC,IAAK,QACH,OAAO,cAAC,IAAD,CAASA,UAAU,SAC5B,QACE,OAAO,8B,mECCPC,G,YAAY,IAAIC,MAAM,GAAGC,KAAK,KAErB,SAASC,IACtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAqEMC,EAAa,SAACC,GAClB,OAAIH,EACKI,YAAMJ,EAAQ,CAAEK,KAAM,YAGA,KAA3BZ,EAAUU,GAILC,YAAM,iBAAkB,CAAEC,KAAM,UAHvCZ,EAAUU,GAAeL,EAAU,QAAU,SAC7CC,GAAYD,QAhEZL,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,GAE3BQ,EAAUR,EAAU,GAAK,QAGzBA,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3BQ,EAAUR,EAAU,GAAK,WAmB7B,OACE,mCACE,eAACa,EAAA,EAAD,CAAWd,UAAU,MAArB,UACE,cAAC,IAAD,CAAgBe,SAAS,kBACzB,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,cAAtB,UACGQ,EACC,sBAAKR,UAAU,aAAf,UACE,oBAAIA,UAAU,0CAAd,SACGQ,IAEH,cAACW,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAChBC,MAAM,UACNC,QAhGG,WACjBhB,GAAW,GACXE,EAAU,IAEVR,EAAUE,KAAK,KAyFH,gCASF,oBAAIH,UAAU,2BAAd,SACGM,EAAU,aAAe,gBAG9B,qBAAKN,UAAU,OAAf,SACGC,EAAUuB,KAAI,SAACC,EAAMC,GACpB,OACE,cAACC,EAAA,EAAD,CAEEJ,QAAS,WACPb,EAAWgB,IAHf,SAME,cAACE,EAAA,EAAD,CAAU5B,UAAU,MAApB,SACE,cAACF,EAAD,CAAMC,UAAW0B,OANdC,kBC3HzBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72b3aecd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes, FaRegCircle } from \"react-icons/fa\";\r\n\r\nexport default function Icon({ icon_name }) {\r\n  switch (icon_name) {\r\n    case \"circle\":\r\n      return <FaRegCircle className=\"icon\" />;\r\n    case \"cross\":\r\n      return <FaTimes className=\"icon\" />;\r\n    default:\r\n      return <></>;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport Icon from \"./Components/Icon\";\n\n// Toast import\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Bootstrap import\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nconst itemArray = new Array(9).fill(\"\");\n\nexport default function App() {\n  const [isCross, setIsCross] = useState(false);\n  const [winMsg, setWinMsg] = useState(\"\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMsg(\"\");\n    //TEST THIS itemArray.fill(\"empty\");\n    itemArray.fill(\"\");\n  };\n\n  const checkIsWinner = () => {\n    //Left Cross 0-4-8\n    if (\n      itemArray[0] &&\n      itemArray[0] === itemArray[4] &&\n      itemArray[4] === itemArray[8]\n    ) {\n      setWinMsg(itemArray[0] + \" WIN\");\n    } //Right Cross 2-4-6\n    else if (\n      itemArray[2] &&\n      itemArray[2] === itemArray[4] &&\n      itemArray[4] === itemArray[6]\n    ) {\n      setWinMsg(itemArray[2] + \" WIN\");\n    } //Row 1\n    else if (\n      itemArray[0] &&\n      itemArray[0] === itemArray[1] &&\n      itemArray[1] === itemArray[2]\n    ) {\n      setWinMsg(itemArray[0] + \" WIN\");\n    } //Row 2\n    else if (\n      itemArray[3] &&\n      itemArray[3] === itemArray[4] &&\n      itemArray[4] === itemArray[5]\n    ) {\n      setWinMsg(itemArray[3] + \" WIN\");\n    } //Row 3\n    else if (\n      itemArray[6] &&\n      itemArray[6] === itemArray[7] &&\n      itemArray[7] === itemArray[8]\n    ) {\n      setWinMsg(itemArray[6] + \" WIN\");\n    } //Col 1\n    else if (\n      itemArray[0] &&\n      itemArray[0] === itemArray[3] &&\n      itemArray[3] === itemArray[6]\n    ) {\n      setWinMsg(itemArray[0] + \" WIN\");\n    } //Col 2\n    else if (\n      itemArray[1] &&\n      itemArray[1] === itemArray[4] &&\n      itemArray[4] === itemArray[7]\n    ) {\n      setWinMsg(itemArray[1] + \" WIN\");\n    } //Col 3\n    else if (\n      itemArray[2] &&\n      itemArray[2] === itemArray[5] &&\n      itemArray[5] === itemArray[8]\n    ) {\n      setWinMsg(itemArray[2] + \" WIN\");\n    }\n  };\n\n  const changeItem = (item_number) => {\n    if (winMsg) {\n      return toast(winMsg, { type: \"success\" });\n    }\n\n    if (itemArray[item_number] === \"\") {\n      itemArray[item_number] = isCross ? \"cross\" : \"circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"Already filled\", { type: \"info\" });\n    }\n\n    checkIsWinner();\n  };\n\n  return (\n    <>\n      <Container className=\"p-5\">\n        <ToastContainer position=\"bottom-center\" />\n        <Row>\n          <Col md={6} className=\"offset-md-3\">\n            {winMsg ? (\n              <div className=\"mb-2 mt-2 \">\n                <h1 className=\"text-success text-uppercase text-center\">\n                  {winMsg}\n                </h1>\n                <Button\n                  style={{ width: \"100%\" }}\n                  color=\"success\"\n                  onClick={reloadGame}\n                >\n                  Reload The Game\n                </Button>\n              </div>\n            ) : (\n              <h1 className=\"text-center text-warning\">\n                {isCross ? \"Cross-turn\" : \"Circle-turn\"}\n              </h1>\n            )}\n            <div className=\"grid\">\n              {itemArray.map((item, index) => {\n                return (\n                  <Card\n                    key={index}\n                    onClick={() => {\n                      changeItem(index);\n                    }}\n                  >\n                    <CardBody className=\"box\">\n                      <Icon icon_name={item} />\n                    </CardBody>\n                  </Card>\n                );\n              })}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}